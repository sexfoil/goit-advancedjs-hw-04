{"version":3,"file":"commonHelpers.js","sources":["../src/search-api.js","../src/index.js"],"sourcesContent":["import axios from 'axios';\naxios.defaults.headers.common['x-api-key'] = \"live_lRZEIkhbwtvfK1yPxtwtCkUy1ANlxpe35OrJl3neeWXcmXVdB9lEFrv8VKk1XIgE\";\n\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst PIXABAY_API_KEY = '40838558-c247548bc4ad52de754856e08';\nconst IMAGE_PARAM_TEMPLATE = {\n    key: PIXABAY_API_KEY,\n    q: '',\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true\n}\n\nfunction getSearchUrl(params) {\n    // console.log(`${BASE_URL}?${params}`);\n    return `${BASE_URL}?${params}`;\n}\n\nfunction getParams(query, template) {\n    template.q = query;\n    return new URLSearchParams(template);    \n}\n\n\nasync function fetchUrl(query, searchTemplate = { key: PIXABAY_API_KEY }) {\n    const params = getParams(query, searchTemplate);\n    const data = (await axios.get(getSearchUrl(params))).data;\n    console.log(\"DATA: \", data);\n    return data;\n}\n\nfunction fetchUrl2(query, searchTemplate = { key: PIXABAY_API_KEY }) {\n    const params = getParams(query, searchTemplate);\n    const data = axios.get(getSearchUrl(params)).then(data => console.log(data)).catch(err => console.log('ERROR', err));\n    console.log(\"DATA: \", data);\n    return data;\n}\n\n\nexport function findImages(searchQuery) {\n    return fetchUrl2(searchQuery, IMAGE_PARAM_TEMPLATE);\n}","import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport { findImages } from './search-api';\n\n// const { height: cardHeight } = document\n// .querySelector(\".gallery\")\n// .firstElementChild.getBoundingClientRect();\n\n// window.scrollBy({\n//     top: cardHeight * 2,\n//     behavior: \"smooth\",\n// });\n\n\nconst formElem = document.querySelector('.search-form');\nconst myForm = new FormData(formElem);\n\nfunction onFormSubmit(evt) {\n    evt.preventDefault();\n    findImages(\"big black cats\");\n}\n\nconst btn = document.querySelector('button[type=\"submit\"]');\nconsole.log(btn);\n\nbtn.addEventListener('click', onFormSubmit);\n\n\n// const slimSelectSettings = {\n//     showSearch: false,\n//     placeholderText: \"Select cat's breed\"\n// }\n\n// const slimSelectEvent = {\n//     afterChange: onSelectChange\n// }\n\n// const elements = {\n//     selectWraper: document.querySelector('.select-wraper'),\n//     selectBreed: new SlimSelect({\n//         select: '.breed-select',\n//         settings: slimSelectSettings,\n//         events: slimSelectEvent\n//     }),\n//     pLoader: document.querySelector('.loader'),\n//     divCatInfo: document.querySelector('.cat-info')\n// }\n\n// function fillCatsData(cats) {\n\n//     const breedsData = [{\n//         placeholder: true,\n//         text: \"Select cat's breed\"\n//     }];\n    \n//     cats.forEach(cat => breedsData.push({\n//             text: `${cat.name}`,\n//             value: `${cat.id}`\n//         })\n//     );\n    \n//     elements.selectBreed.setData(breedsData);\n\n//     setVisibility(elements.pLoader, false);\n//     setVisibility(elements.selectWraper, true);\n// }\n\n// function showSearchResult({ url, breeds: info } = cat) {\n//     const contentHTML = `\n//         <img class=\"image\" src=\"${url}\" alt=\"${info[0].name}\" />\n//         <div class=\"text-info-block\">\n//             <h2 class=\"breed-name\">${info[0].name}</h2>\n//             <p class=\"description\">${info[0].description}</p>\n//             <p><span class=\"temperament\">Temperament:</span> ${info[0].temperament}</p>\n//         </div>\n//     `\n//     elements.divCatInfo.innerHTML = contentHTML;\n//     setVisibility(elements.pLoader, false);\n//     setVisibility(elements.selectWraper, true);\n//     setVisibility(elements.divCatInfo, true);\n// }\n\n// function showErrorMessage() {\n//     setVisibility(elements.pLoader, false);\n//     iziToast.show({\n//         message: \"Oops! Something went wrong! Try reloading the page!\",\n//         messageColor: 'white',\n//         backgroundColor: 'tomato',\n//         timeout: 4000,\n//         position: 'topCenter'\n//     });\n// }\n\n// function setVisibility(element, isVisible) {\n//     if (isVisible) {\n//         element.removeAttribute(\"hidden\");\n//     } else {\n//         element.setAttribute(\"hidden\", \"\");\n//     }\n// }\n\n// setVisibility(elements.selectWraper, false);\n// setVisibility(elements.divCatInfo, false);\n\n// fetchBreeds()\n//     .then(data => fillCatsData(data))\n//     .catch(err => showErrorMessage());\n\n// function onSelectChange(values) {\n//     if (!values[0].placeholder) {\n//         setVisibility(elements.pLoader, true);\n//         setVisibility(elements.divCatInfo, false);\n//         elements.divCatInfo.innerHTML = '';\n\n//         fetchCatByBreed(values[0].value)\n//             .then(data => showSearchResult(data[0]))\n//             .catch(err => showErrorMessage());\n//     }    \n// }\n"],"names":["axios","BASE_URL","PIXABAY_API_KEY","IMAGE_PARAM_TEMPLATE","getSearchUrl","params","getParams","query","template","fetchUrl2","searchTemplate","data","err","findImages","searchQuery","formElem","onFormSubmit","evt","btn"],"mappings":"svBACAA,EAAM,SAAS,QAAQ,OAAO,aAAe,wEAG7C,MAAMC,EAAW,2BACXC,EAAkB,qCAClBC,EAAuB,CACzB,IAAKD,EACL,EAAG,GACH,WAAY,QACZ,YAAa,aACb,WAAY,EAChB,EAEA,SAASE,EAAaC,EAAQ,CAE1B,MAAO,GAAGJ,KAAYI,GAC1B,CAEA,SAASC,EAAUC,EAAOC,EAAU,CAChC,OAAAA,EAAS,EAAID,EACN,IAAI,gBAAgBC,CAAQ,CACvC,CAUA,SAASC,EAAUF,EAAOG,EAAiB,CAAE,IAAKR,CAAe,EAAI,CACjE,MAAMG,EAASC,EAAUC,EAAOG,CAAc,EACxCC,EAAOX,EAAM,IAAII,EAAaC,CAAM,CAAC,EAAE,KAAKM,GAAQ,QAAQ,IAAIA,CAAI,CAAC,EAAE,MAAMC,GAAO,QAAQ,IAAI,QAASA,CAAG,CAAC,EACnH,eAAQ,IAAI,SAAUD,CAAI,EACnBA,CACX,CAGO,SAASE,EAAWC,EAAa,CACpC,OAAOL,EAAUK,EAAaX,CAAoB,CACtD,CC5BA,MAAMY,EAAW,SAAS,cAAc,cAAc,EACvC,IAAI,SAASA,CAAQ,EAEpC,SAASC,EAAaC,EAAK,CACvBA,EAAI,eAAc,EAClBJ,EAAW,gBAAgB,CAC/B,CAEA,MAAMK,EAAM,SAAS,cAAc,uBAAuB,EAC1D,QAAQ,IAAIA,CAAG,EAEfA,EAAI,iBAAiB,QAASF,CAAY"}