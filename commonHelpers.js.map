{"version":3,"file":"commonHelpers.js","sources":["../src/cat-api.js","../src/index.js"],"sourcesContent":["import axios from 'axios';\naxios.defaults.headers.common['x-api-key'] = \"live_lRZEIkhbwtvfK1yPxtwtCkUy1ANlxpe35OrJl3neeWXcmXVdB9lEFrv8VKk1XIgE\";\n\n\nconst BASE_URL = 'https://api.thecatapi.com';\nconst ENDPOINT_BREEDS = 'v1/breeds';\nconst ENDPOINT_IMG_SEARCH = 'v1/images/search';\n\n\nfunction fetchUrl(url) {\n    return axios.get(url)\n        .then(resp => {\n            if (resp.status >= 400) {\n                return new Error(resp.statusText);\n            }\n            return resp.data;\n        });\n}\n\nfunction getUrl(endpoint, params = '') {\n    return `${BASE_URL}/${endpoint}${params}`;\n}\n\nexport function fetchBreeds() {\n    const breedsUrl = getUrl(ENDPOINT_BREEDS);\n    return fetchUrl(breedsUrl);        \n}\n\nexport function fetchCatByBreed(breedId) {\n    const params = new URLSearchParams({\n        breed_ids: breedId\n    });\n    const searchUrl = getUrl(ENDPOINT_IMG_SEARCH, `?${params}`);\n    return fetchUrl(searchUrl);\n}","import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport { fetchBreeds, fetchCatByBreed } from './cat-api';\n\nconst { height: cardHeight } = document\n.querySelector(\".gallery\")\n.firstElementChild.getBoundingClientRect();\n\nwindow.scrollBy({\n    top: cardHeight * 2,\n    behavior: \"smooth\",\n});\n// const slimSelectSettings = {\n//     showSearch: false,\n//     placeholderText: \"Select cat's breed\"\n// }\n\n// const slimSelectEvent = {\n//     afterChange: onSelectChange\n// }\n\n// const elements = {\n//     selectWraper: document.querySelector('.select-wraper'),\n//     selectBreed: new SlimSelect({\n//         select: '.breed-select',\n//         settings: slimSelectSettings,\n//         events: slimSelectEvent\n//     }),\n//     pLoader: document.querySelector('.loader'),\n//     divCatInfo: document.querySelector('.cat-info')\n// }\n\n// function fillCatsData(cats) {\n\n//     const breedsData = [{\n//         placeholder: true,\n//         text: \"Select cat's breed\"\n//     }];\n    \n//     cats.forEach(cat => breedsData.push({\n//             text: `${cat.name}`,\n//             value: `${cat.id}`\n//         })\n//     );\n    \n//     elements.selectBreed.setData(breedsData);\n\n//     setVisibility(elements.pLoader, false);\n//     setVisibility(elements.selectWraper, true);\n// }\n\n// function showSearchResult({ url, breeds: info } = cat) {\n//     const contentHTML = `\n//         <img class=\"image\" src=\"${url}\" alt=\"${info[0].name}\" />\n//         <div class=\"text-info-block\">\n//             <h2 class=\"breed-name\">${info[0].name}</h2>\n//             <p class=\"description\">${info[0].description}</p>\n//             <p><span class=\"temperament\">Temperament:</span> ${info[0].temperament}</p>\n//         </div>\n//     `\n//     elements.divCatInfo.innerHTML = contentHTML;\n//     setVisibility(elements.pLoader, false);\n//     setVisibility(elements.selectWraper, true);\n//     setVisibility(elements.divCatInfo, true);\n// }\n\n// function showErrorMessage() {\n//     setVisibility(elements.pLoader, false);\n//     iziToast.show({\n//         message: \"Oops! Something went wrong! Try reloading the page!\",\n//         messageColor: 'white',\n//         backgroundColor: 'tomato',\n//         timeout: 4000,\n//         position: 'topCenter'\n//     });\n// }\n\n// function setVisibility(element, isVisible) {\n//     if (isVisible) {\n//         element.removeAttribute(\"hidden\");\n//     } else {\n//         element.setAttribute(\"hidden\", \"\");\n//     }\n// }\n\n// setVisibility(elements.selectWraper, false);\n// setVisibility(elements.divCatInfo, false);\n\n// fetchBreeds()\n//     .then(data => fillCatsData(data))\n//     .catch(err => showErrorMessage());\n\n// function onSelectChange(values) {\n//     if (!values[0].placeholder) {\n//         setVisibility(elements.pLoader, true);\n//         setVisibility(elements.divCatInfo, false);\n//         elements.divCatInfo.innerHTML = '';\n\n//         fetchCatByBreed(values[0].value)\n//             .then(data => showSearchResult(data[0]))\n//             .catch(err => showErrorMessage());\n//     }    \n// }\n"],"names":["axios","cardHeight"],"mappings":"svBACAA,EAAM,SAAS,QAAQ,OAAO,aAAe,wECG7C,KAAM,CAAE,OAAQC,CAAU,EAAK,SAC9B,cAAc,UAAU,EACxB,kBAAkB,sBAAqB,EAExC,OAAO,SAAS,CACZ,IAAKA,EAAa,EAClB,SAAU,QACd,CAAC"}